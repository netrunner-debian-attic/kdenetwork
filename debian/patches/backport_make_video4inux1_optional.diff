From: Carlos Federico Aguirre
From: Lamarque V Souza <lamarque@gmail.com>
Subject: Make V4L support optional
Bug: http://bugs.kde.org/269296
Origin: other, http://svn.reviewboard.kde.org/r/6643/
Origin: backport, http://websvn.kde.org/?view=revision&revision=1226216
Acked-By: Modestas Vainius <modax@debian.org>
Last-Update: 2011-03-27
Applied-Upstream: 4.6.2

Make V4L support optional as it has been removed from kernel 2.6.38
http://svn.reviewboard.kde.org/r/6643
Thanks Carlos Federico Aguirre for this patch.

BUG: 269296
REVIEW: 6643
FIXED-IN: 4.6.2


--- a/kopete/CMakeLists.txt
+++ b/kopete/CMakeLists.txt
@@ -122,6 +122,7 @@ macro_bool_to_01(LIBV4L2_FOUND HAVE_LIBV
 check_include_files(valgrind/valgrind.h HAVE_VALGRIND_H)
 check_include_files(stdint.h HAVE_STDINT_H)
 check_include_files(inttypes.h HAVE_INTTYPES_H)
+check_include_files(linux/videodev.h HAVE_V4L)
 macro_bool_to_01(X11_Xss_FOUND HAVE_XSCREENSAVER)
 
 macro_optional_find_package(Expat)
--- a/kopete/config-kopete.h.cmake
+++ b/kopete/config-kopete.h.cmake
@@ -62,3 +62,5 @@
 
 /* Define to 1 if you want libv4l support */
 #cmakedefine HAVE_LIBV4L2 1
+
+#cmakedefine HAVE_V4L 1
--- a/kopete/libkopete/avdevice/videodevice.cpp
+++ b/kopete/libkopete/avdevice/videodevice.cpp
@@ -485,7 +485,7 @@ detectSignalStandards();
 		}
 
 #endif
-
+#ifdef HAVE_V4L
 		CLEAR(V4L_capabilities);
 
 		if(m_driver==VIDEODEV_DRIVER_NONE)
@@ -550,6 +550,7 @@ detectSignalStandards();
 			}
 		}
 #endif
+#endif
 		m_name=m_model; // Take care about changing the name to be different from the model itself...
 
 		detectPixelFormats();
@@ -678,6 +679,7 @@ int VideoDevice::initDevice()
 			}
 			break;
 #endif
+#ifdef HAVE_V4L
 		case VIDEODEV_DRIVER_V4L:
 			m_videoread=true;
 			m_io_method=IO_METHOD_READ;
@@ -689,6 +691,7 @@ int VideoDevice::initDevice()
 			}
 			break;
 #endif
+#endif
 		case VIDEODEV_DRIVER_NONE:
 		default:
 
@@ -863,6 +866,7 @@ kDebug() << "VIDIOC_S_FMT worked (" << e
 				}
 				break;
 #endif
+#ifdef HAVE_V4L
 			case VIDEODEV_DRIVER_V4L:
 				{
 					struct video_window V4L_videowindow;
@@ -893,6 +897,7 @@ kDebug() << "------------- width: " << V
 				}
 				break;
 #endif
+#endif
 			case VIDEODEV_DRIVER_NONE:
 			default:
 				return EXIT_FAILURE;
@@ -966,6 +971,7 @@ pixel_format VideoDevice::setPixelFormat
 			}
 			break;
 #endif
+#ifdef HAVE_V4L
 		case VIDEODEV_DRIVER_V4L:
 			{
 			struct video_picture V4L_picture;
@@ -994,6 +1000,7 @@ pixel_format VideoDevice::setPixelFormat
 			}
 			break;
 #endif
+#endif
 		case VIDEODEV_DRIVER_NONE:
 		default:
 			break;
@@ -1043,6 +1050,7 @@ int VideoDevice::selectInput(int newinpu
 				setupControls();
 				break;
 #endif
+#ifdef HAVE_V4L
 			case VIDEODEV_DRIVER_V4L:
 				struct video_channel V4L_input;
 				V4L_input.channel=newinput;
@@ -1055,6 +1063,7 @@ int VideoDevice::selectInput(int newinpu
 				setupControls();
 				break;
 #endif
+#endif
 			case VIDEODEV_DRIVER_NONE:
 			default:
 				break;
@@ -1817,6 +1826,7 @@ int VideoDevice::getControlValue(quint32
 			}
 			break;
 #endif
+#ifdef HAVE_V4L
 		case VIDEODEV_DRIVER_V4L:
 			struct video_picture V4L_picture;
 			if(-1 == xioctl(VIDIOCGPICT, &V4L_picture))
@@ -1847,6 +1857,7 @@ int VideoDevice::getControlValue(quint32
 			kDebug() << "Reported current value is" << *value << ".";
 			return EXIT_SUCCESS;
 #endif
+#endif
 		case VIDEODEV_DRIVER_NONE:
 		default:
 			break;
@@ -1963,6 +1974,7 @@ int VideoDevice::setControlValue(quint32
 			}
 			break;
 #endif
+#ifdef HAVE_V4L
 		case VIDEODEV_DRIVER_V4L:
 			struct video_picture V4L_picture;
 			if(-1 == xioctl(VIDIOCGPICT, &V4L_picture))
@@ -2008,6 +2020,7 @@ int VideoDevice::setControlValue(quint32
 			}
 			return EXIT_SUCCESS;
 #endif
+#endif
 		case VIDEODEV_DRIVER_NONE:
 		default:
 			break;
@@ -2070,6 +2083,7 @@ pixel_format VideoDevice::pixelFormatFor
 			}
 			break;
 #endif
+#ifdef HAVE_V4L
 		case VIDEODEV_DRIVER_V4L:
 			switch(palette)
 			{
@@ -2088,6 +2102,7 @@ pixel_format VideoDevice::pixelFormatFor
 			}
 			break;
 #endif
+#endif
 		case VIDEODEV_DRIVER_NONE:
 		default:
 			return PIXELFORMAT_NONE;	break;
@@ -2150,6 +2165,7 @@ int VideoDevice::pixelFormatCode(pixel_f
 			}
 			break;
 #endif
+#ifdef HAVE_V4L
 		case VIDEODEV_DRIVER_V4L:
 			switch(pixelformat)
 			{
@@ -2195,6 +2211,7 @@ int VideoDevice::pixelFormatCode(pixel_f
 			}
 			break;
 #endif
+#endif
 		case VIDEODEV_DRIVER_NONE:
 		default:
 			return PIXELFORMAT_NONE;	break;
@@ -2356,6 +2373,7 @@ QString VideoDevice::pixelFormatName(int
 			}
 			break;
 #endif
+#ifdef HAVE_V4L
 		case VIDEODEV_DRIVER_V4L:
 			switch(pixelformat)
 			{
@@ -2373,6 +2391,7 @@ QString VideoDevice::pixelFormatName(int
 			}
 			break;
 #endif
+#endif
 		case VIDEODEV_DRIVER_NONE:
 		default:
 			break;
@@ -2520,6 +2539,7 @@ __u64 VideoDevice::signalStandardCode(si
 			}
 			break;
 #endif
+#ifdef HAVE_V4L
 		case VIDEODEV_DRIVER_V4L:
 			switch(standard)
 			{
@@ -2575,6 +2595,7 @@ __u64 VideoDevice::signalStandardCode(si
 			}
 			break;
 #endif
+#endif
 		case VIDEODEV_DRIVER_NONE:
 		default:
 			return STANDARD_UNKNOWN;	break;
@@ -2701,6 +2722,7 @@ QString VideoDevice::signalStandardName(
 			}
 			break;
 #endif
+#ifdef HAVE_V4L
 		case VIDEODEV_DRIVER_V4L:
 			switch(standard)
 			{
@@ -2715,6 +2737,7 @@ QString VideoDevice::signalStandardName(
 			}
 			break;
 #endif
+#endif
 		case VIDEODEV_DRIVER_NONE:
 		default:
 			break;
--- a/kopete/libkopete/avdevice/videodevice.h
+++ b/kopete/libkopete/avdevice/videodevice.h
@@ -55,13 +55,21 @@
 #include <linux/fs.h>
 #include <linux/kernel.h>
 #endif
+
+#ifdef HAVE_V4L
 #include <linux/videodev.h>
+#endif // have_v4l
+
 #define VIDEO_MODE_PAL_Nc  3
 #define VIDEO_MODE_PAL_M   4
 #define VIDEO_MODE_PAL_N   5
 #define VIDEO_MODE_NTSC_JP 6
 #define __STRICT_ANSI__
 
+#if defined(HAVE_LIBV4L2) && ! defined(HAVE_V4L)
+#include <linux/videodev2.h>
+#endif
+
 #ifdef HAVE_LIBV4L2
 #include <libv4l2.h>
 #endif // HAVE_V4L2
@@ -367,9 +375,11 @@ protected:
 	struct v4l2_format fmt;
 //	struct v4l2_input m_input;
 #endif
+#ifdef HAVE_V4L
 	struct video_capability V4L_capabilities;
 	struct video_buffer V4L_videobuffer;
-#endif	
+#endif
+#endif
 	int currentwidth, minwidth, maxwidth, currentheight, minheight, maxheight;
 
 	QVector<rawbuffer> m_rawbuffers;
